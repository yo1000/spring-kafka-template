services:
  producer-app:
    build:
      context: ./kafka-producer
      args:
        JAR: ./target/*.jar
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092

      # AWS MSK IAM Auth
      SPRING_KAFKA_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: AWS_MSK_IAM
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: software.amazon.msk.auth.iam.IAMLoginModule required;
      SPRING_KAFKA_PROPERTIES_SASL_CLIENT_CALLBACK_HANDLER_CLASS: software.amazon.msk.auth.iam.IAMClientCallbackHandler

      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_KAFKA_CORE: debug
    ports:
      - "8080:8080"
      - "8090:8090"

  consumer-app:
    build:
      context: ./kafka-consumer
      args:
        JAR: ./target/*.jar
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092

      # AWS MSK IAM Auth
      SPRING_KAFKA_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: AWS_MSK_IAM
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: software.amazon.msk.auth.iam.IAMLoginModule required;
      SPRING_KAFKA_PROPERTIES_SASL_CLIENT_CALLBACK_HANDLER_CLASS: software.amazon.msk.auth.iam.IAMClientCallbackHandler

      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sales_statistics
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop

      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_KAFKA_CORE: debug
      LOGGING_LEVEL_COM_YO1000_KAFKA_CONSUMER_PRESENTATION: debug
    ports:
      - "8081:8080"
      - "8091:8090"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales_statistics
    healthcheck:
      test: pg_isready -U pgweb -h 127.0.0.1
      interval: 5s

  pgweb:
    image: sosedoff/pgweb
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres:postgres@postgres:5432/sales_statistics?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8032:8081"

  kafka:
    image: apache/kafka-native
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8092:8080"
    depends_on:
      - kafka
